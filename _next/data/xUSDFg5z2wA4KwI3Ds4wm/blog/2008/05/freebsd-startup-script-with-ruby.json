{"pageProps":{"title":"FreeBSD startup script with ruby","contents":"<p>Since some days ago I&#39;ve been using FreeBSD in a Rails deployment server configuring it to use Capistrano, nginx and mongrel but then I wanted my mongrel instances to be run at startup and what I found was this message:</p>\n<blockquote>\n<p>Put your .sh script at /usr/local/etc/rc.d</p>\n</blockquote>\n<p>And since I like ruby, I began to code my script with it and the problems came:</p>\n<blockquote>\n<p>env: ruby: No such file or directory</p>\n</blockquote>\n<blockquote>\n<p>custom_require.rb:27: command not found: mongrel_rails</p>\n</blockquote>\n<p>First, here is my final code that was inspired by <a href=\"http://snippets.dzone.com/posts/show/2594\">Tim Morgan&#39;s</a>:</p>\n<pre><code class=\"language-ruby\">#!/usr/local/bin/ruby\n\nputs ENV[&quot;PATH&quot;] += &quot;:/usr/local/bin&quot;\napp_dir = &#39;/usr/local/www&#39;\n\napps = [\n  scielo_index = { :name =&gt; &quot;ScieloIndex&quot;,\n                   :path =&gt; &#39;index.scielo.unam.mx/current&#39;,\n                   :config =&gt; &quot;config/mongrel_cluster.yml&quot;,\n                   :cluster =&gt; true },\n\n  redmine = { :name =&gt; &quot;Redmine&quot;,\n              :path =&gt; &#39;dev.scielo.unam.mx/Redmine&#39;,\n              :config =&gt; &quot;config/mongrel_8000.yml&quot;,\n              :pid =&gt; &quot;log/mongrel.pid&quot; }\n  ]\n\nif [&#39;stop&#39;, &#39;restart&#39;].include? ARGV.first\n  apps.each do |app|\n    path = File.join app_dir, app[:path]\n    puts &quot;Stopping #{app[:name]}...&quot;\n    if app[:cluster]\n      `mongrel_rails cluster::stop -C #{path}/#{app[:config]}`\n    else\n      `mongrel_rails stop -c #{path} -P #{app[:pid]}`\n    end\n  end\nend\n\nif [&#39;start&#39;, &#39;restart&#39;].include? ARGV.first\n  apps.each do |app|\n    path = File.join app_dir, app[:path]\n    puts &quot;Starting #{app[:name]}...&quot;\n    if app[:cluster]\n      `mongrel_rails cluster::start -C #{path}/#{app[:config]}`\n    else\n      `mongrel_rails start -C #{path}/#{app[:config]}`\n    end\n  end\nend\n\nunless [&#39;start&#39;, &#39;stop&#39;, &#39;restart&#39;].include? ARGV.first\n    puts &quot;Usage: mongrel {start|stop|restart}&quot;\n    exit\nend</code></pre>\n<p>The key part is the <code>ENV[&quot;PATH&quot;]</code> setup, that line is needed as FreeBSD&#39;s PATH at startup is <code>&quot;/sbin:/bin:/usr/sbin:/usr/bin&quot;</code> and this also leads us to change the interpreter path from something like <code>&quot;#!/usr/bin/env ruby&quot;</code> to <code>&quot;#!/usr/local/bin/ruby&quot;</code>, i.e. its full path.</p>\n<p>That&#39;s all, now our ruby script really runs at startup time without complaining.</p>\n","categories":["ruby","FreeBSD","code"],"comments":false,"date":"2008-05-26","slug":"freebsd-startup-script-with-ruby","lang":"en"},"__N_SSG":true}